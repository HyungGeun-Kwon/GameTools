<UserControl x:Class="GameTools.Client.Wpf.Views.Rarities.RarityResultView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GameTools.Client.Wpf.Views.Rarities"
             xmlns:localConverter="clr-namespace:GameTools.Client.Wpf.Common.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <localConverter:IsDirtyToBrushConverter x:Key="IsDirtyToBrushConverter"/>
        <!-- HasErrors == true 이면 행 배경을 연한 빨강으로 -->
        <Style x:Key="ErrorRowStyle" TargetType="DataGridRow">
            <Setter Property="ToolTip"
                    Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
            <Style.Triggers>
                <!-- ViewModel/Model에 HasErrors(bool)가 있다고 가정 -->
                <DataTrigger Binding="{Binding HasErrors}" Value="True">
                    <Setter Property="Background" Value="#FFFFE5E5"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- ColorCode 셀 배경을 색상으로 칠하고 싶다면 사용 (선택) -->
        <Style x:Key="ColorCellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="{Binding ColorCode}"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <DataGrid ItemsSource="{Binding State.Results}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  IsReadOnly="False"
                  RowStyle="{StaticResource ErrorRowStyle}">
            <DataGrid.Columns>

                <!-- Id -->
                <DataGridTextColumn Header="ID"
                                    Binding="{Binding Id}"
                                    IsReadOnly="True"
                                    Width="80"/>

                <!-- Grade -->
                <DataGridTextColumn Header="Grade"
                                    Binding="{Binding Grade, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True}"
                                    Width="120"/>

                <!-- ColorCode -->
                <DataGridTemplateColumn Header="ColorCode" Width="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Border Width="18" Height="18" CornerRadius="3"
                                        BorderBrush="#33000000" BorderThickness="1"
                                        Background="{Binding ColorCode}"/>
                                <TextBlock Text="{Binding ColorCode}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Border Width="18" Height="18" CornerRadius="3"
                                        BorderBrush="#33000000" BorderThickness="1"
                                        Background="{Binding ColorCode}"/>
                                <TextBox Text="{Binding ColorCode, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True}"
                                         MinWidth="120"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <!-- RowVersion -->
                <DataGridTextColumn Header="RowVersion"
                                    Binding="{Binding RowVersionBase64}"
                                    IsReadOnly="True"
                                    Width="*"/>

                <!-- IsDirty -->
                <DataGridTemplateColumn Header=" " Width="40" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!-- 더티면 주황, 최신이면 초록색 -->
                            <TextBlock Text="●" FontSize="14"
                                       Foreground="{Binding IsDirty, Converter={StaticResource IsDirtyToBrushConverter}}"
                                       HorizontalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <!-- 기본(최신/초록) -->
                                        <Setter Property="ToolTip" Value="All changes saved"/>
                                        <!-- 더티(주황) -->
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDirty}" Value="True">
                                                <Setter Property="ToolTip" Value="Unsaved changes"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
